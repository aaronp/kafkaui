mongo4m {

  # the database where the user is defined
  databases: {
    # Settings for the 'matchQueries' collection - not a template, but a collection in its own right
    registereduserLatest = ${mongo4m.notCapped}
    registereduserLatest.indices: ${mongo4m.registereduserIndices} [${mongo4m.latestIndex}]

    registereduserVersions = ${mongo4m.notCapped}
    registereduserVersions.indices: ${mongo4m.registereduserIndices} [${mongo4m.versionedIndex}]

    # Settings for our versioned collections - a template for collections of the type <name>Versioned
    versionedCollectionsBase = ${mongo4m.notCapped}
    versionedCollectionsBase.indices: [${mongo4m.versionedIndex}]

    latestCollectionsBase = ${mongo4m.notCapped}
    latestCollectionsBase.indices: [${mongo4m.latestIndex}]

    # Settings for the 'matchQueries' collection - a template for collections of the type <name>Schemas
    namedSchemasBase = ${mongo4m.notCapped}
    namedSchemasBase.indices: [${mongo4m.latestIndex}]
  }

  notCapped = {
    capped: false
    maxSizeInBytes: 0M
    maxDocuments: 0
  }

  latestIndex : {
    # the 'latest' collection should only ever have one record of a particular ID at a time
    field : id
    unique : true
    background : false
  }

  versionedIndex : {
    # the 'latest' collection should only ever have one record of a particular ID at a time
    fields : [id, version]
    unique : true
    background : false
  }

  registereduserIndices : [
    {
      unique : true
      background : false
      field : "data.userName"
    },
    {
      field : "data.email"
      unique : true
      background : false
    }
  ]

}
